import static org.junit.Assert.*;

import org.junit.*;

public class LaboonCoinTest {

    // Assert that creating a new LaboonCoin instance
    // does not return a null reference
    @Test
    public void testLaboonCoinExists() {
	LaboonCoin l = new LaboonCoin();
	assertNotNull(l);
    }

    // Assert that a hash can be generated by the hash function
    @Test
    public void testBasicHash() {
	String str = "boo00000000000010bb";
    LaboonCoin l = new LaboonCoin();

    int hash = l.hash(str);
	assertEquals(0x000b43be, hash);
    }

    // Assert that a hash can be generated by the hash function
    @Test
    public void testLongHash() {
	String str = "boo";
    LaboonCoin l = new LaboonCoin();

    int hash = 0;
    hash = l.hash(str);
	assertEquals(hash, Integer.parseInt("551fda32", 16));
    }

    // Assert that a hash is not generated when a null string is entered
    @Test
    public void testNullHash() {
    LaboonCoin l = new LaboonCoin();

    try {
            int hash = l.hash(null);
    } catch (IllegalArgumentException e) {
       return; 
    }
    fail("No IllegalArgumentException thrown");
    }    

    // Assert that a hash can be generated by the hash function
    @Test
    public void testInvalidHash() {
	int hash = Integer.valueOf("00ffffff", 16);
    LaboonCoin l = new LaboonCoin();

    assertFalse(l.validHash(3, hash));
    }

    // Assert that a hash can be generated by the hash function
    @Test
    public void testVaildHashThree() {
	int hash = Integer.valueOf("000fffff", 16);
    LaboonCoin l = new LaboonCoin();

    assertTrue(l.validHash(3, hash));
    }

    // Assert that a hash can be generated by the hash function
    @Test
    public void testValidHash() {
	int hash = Integer.valueOf("0000ffff", 16);
    LaboonCoin l = new LaboonCoin();
    assertTrue(l.validHash(3, hash));
    }

    
}
